name: Publish to npm

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        description: 'npm token for publishing'
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write # For npm provenance
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: |
          cd npm
          npm ci
      
      - name: Validate package structure
        run: |
          cd npm
          echo "Validating package contents..."
          
          # Check required files exist
          if [ ! -f "package.json" ]; then
            echo "❌ package.json not found"
            exit 1
          fi
          
          if [ ! -f "bin/setup.js" ]; then
            echo "❌ bin/setup.js not found"
            exit 1
          fi
          
          if [ ! -d "../.github" ]; then
            echo "❌ .github directory not found"
            exit 1
          fi
          
          # Check .github has required instruction files
          if [ ! -f "../.github/copilot-instructions.md" ]; then
            echo "❌ Main instruction file not found"
            exit 1
          fi
          
          if [ ! -d "../.github/copilot-roles" ]; then
            echo "❌ Role instructions not found"
            exit 1
          fi
          
          echo "✅ Package structure validation passed"
      
      - name: Verify version consistency
        run: |
          cd npm
          # Extract version from package.json
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          
          # Extract version from GitHub release tag (remove 'v' prefix if present)
          RELEASE_VERSION=${GITHUB_REF#refs/tags/}
          RELEASE_VERSION=${RELEASE_VERSION#v}
          
          echo "Package version: $PACKAGE_VERSION"
          echo "Release version: $RELEASE_VERSION"
          
          if [ "$PACKAGE_VERSION" != "$RELEASE_VERSION" ]; then
            echo "❌ Version mismatch: package.json ($PACKAGE_VERSION) != release tag ($RELEASE_VERSION)"
            echo "Please update package.json version to match release tag"
            exit 1
          fi
          
          echo "✅ Version consistency check passed"
      
      - name: Prepare npm package
        run: |
          echo "Preparing npm package with .github content..."
          # Install dependencies needed for prepare script at root level
          npm install fs-extra chalk --no-save
          cd npm
          node ../scripts/prepare-npm.js
          echo "✅ npm package prepared"
      
      - name: Test package installation
        run: |
          cd npm
          echo "Testing package installation..."
          
          # Pack the package
          npm pack
          
          echo "✅ Package ready for publishing"
      
      - name: Publish to npm
        run: |
          cd npm
          npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create deployment summary
        run: |
          cd npm
          echo "## 🚀 Package Published Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Package**: \`@avanavo/copilot-instructions\`" >> $GITHUB_STEP_SUMMARY
          echo "**Version**: \`$(node -p "require('./package.json').version")\`" >> $GITHUB_STEP_SUMMARY
          echo "**Registry**: npm (public)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Installation" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "npx @avanavo/copilot-instructions" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Links" >> $GITHUB_STEP_SUMMARY
          echo "- [npm Package](https://www.npmjs.com/package/@avanavo/copilot-instructions)" >> $GITHUB_STEP_SUMMARY
          echo "- [GitHub Release](https://github.com/Avanavo/copilot-instructions/releases/tag/v$(node -p "require('./package.json').version"))" >> $GITHUB_STEP_SUMMARY